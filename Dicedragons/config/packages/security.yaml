security:
    # https://symfony.com/doc/current/security/experimental_authenticators.html
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        #users_in_memory: { memory: null }
        app_user_provider:
            entity:
                class: App\Entity\Usuario
                property: Email
    password_hashers:
        # use your user class name here
        App\Entity\Usuario:
            # Use native password hasher, which auto-selects the best
            # possible hashing algorithm (starting from Symfony 5.3 this is "bcrypt")
            algorithm: auto
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\UsuarioAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

            remember_me:
                        secret:   '%kernel.secret%'
                        #lifetime: 604800 # 1 week in seconds
                        path:     /

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    role_hierarchy:
        ROLE_ADMIN:       ROLE_PLAYER
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/personaje, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/clases, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/razas, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/partida, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/partida/partidas_propias, roles: ROLE_ADMIN }
        - { path: ^/personaje/, roles: ROLE_PLAYER }
        - { path: ^/about, roles: ROLE_ADMIN }
        - { path: ^/, roles: ROLE_USER }
